{
  "openapi": "3.0.3",
  "info": {
    "title": "Police Officers Club API",
    "description": "API for the Police Officers Club mobile application supporting authentication, member management, chalet booking, swimming pool reservations, and payment processing",
    "version": "1.0.1",
    "contact": {
      "name": "Police Officers Club",
      "url": "https://policeclub.kw",
      "email": "api@policeclub.kw"
    },
    "license": {
      "name": "Private",
      "url": "https://policeclub.kw/license"
    }
  },
  "servers": [
    {
      "url": "https://api256413.policeclubkw.com/api",
      "description": "Production server"
    }
    
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization endpoints"
    },
    {
      "name": "Member Management",
      "description": "Member profile and management operations"
    },
    {
      "name": "Chalets",
      "description": "Chalet management and availability"
    },
    {
      "name": "Tents",
      "description": "Tent management and availability"
    },
    {
      "name": "Reservations",
      "description": "Booking and reservation management"
    },
    {
      "name": "Payments",
      "description": "Payment processing and transaction management"
    },
    {
      "name": "Notifications",
      "description": "User notification management and delivery"
    },
    {
      "name": "News",
      "description": "News and announcements management"
    },
    {
      "name": "Settings",
      "description": "Application settings and configuration"
    }
  ],
  "paths": {
    "/auth/phone-login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login with Phone Number / Resend OTP",
        "description": "Send OTP to phone number. If called again with the same phone number, it will resend the OTP code.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP sent successfully (or resent if called again)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid phone number format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Phone number not registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded - too many OTP requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify-otp": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Verify OTP Code and Complete Authentication",
        "description": "Verify the OTP code sent to user's phone number and return authentication tokens with membership status",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP verified successfully and authentication completed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired OTP",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many attempts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/members/register": {
      "post": {
        "tags": ["Member Management"],
        "summary": "Register New Member",
        "description": "Register a new member if they are not already a member",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberRegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Member registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid registration data or user already a member",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
   
    "/subscriptions/create": {
      "post": {
        "tags": ["Member Management"],
        "summary": "Create Subscription",
        "description": "Create a new subscription for a member with embedded invoice for payment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Subscription created successfully with invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid subscription data or user already has active subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "User is not a member",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/options": {
      "get": {
        "tags": ["Member Management"],
        "summary": "Get Subscription Options",
        "description": "Get list of available subscription options with pricing and details",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription options retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionOptionsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/members/subscription": {
      "get": {
        "tags": ["Member Management"],
        "summary": "Get Member Subscription Status",
        "description": "Get current subscription status for the authenticated member",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    
    "/reservations/swimming-pool": {
      "post": {
        "tags": ["Reservations"],
        "summary": "Create a new swimming pool reservation",
        "description": "Book a swimming pool slot for a member.",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SwimmingPoolReservationRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Swimming pool reservation created successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SwimmingPoolReservationResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid reservation data or slot unavailable",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/reservations/swimming-pool/{reservationId}": {
      "get": {
        "tags": ["Reservations"],
        "summary": "Get swimming pool reservation details",
        "description": "Retrieve details of a specific swimming pool reservation.",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Swimming pool reservation details",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SwimmingPoolReservationResponse" }
              }
            }
          },
          "404": {
            "description": "Reservation not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/reservations/chalet": {
      "post": {
        "tags": ["Reservations"],
        "summary": "Create a new chalet reservation",
        "description": "Book a chalet for a member.",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ChaletReservationRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Chalet reservation created successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ChaletReservationResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid reservation data or chalet unavailable",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/reservations/chalet/{reservationId}": {
      "get": {
        "tags": ["Reservations"],
        "summary": "Get chalet reservation details",
        "description": "Retrieve details of a specific chalet reservation.",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Chalet reservation details",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ChaletReservationResponse" }
              }
            }
          },
          "404": {
            "description": "Reservation not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/types": {
      "get": {
        "tags": ["Chalets"],
        "summary": "Get List of Types",
        "description": "Get paginated list of chalet types with detailed information including amenities, pricing, and dynamic content",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination",
            "example": 1
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            },
            "description": "Number of items per page",
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Types retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypesListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/types/{id}/slots": {
      "get": {
        "tags": ["Chalets"],
        "summary": "Get Available Time Slots for Type",
        "description": "Get available time slots for a specific type with pricing information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Type ID to get available slots for",
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Available slots retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeSlotsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Type not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/chalets/book": {
      "post": {
        "tags": ["Chalets"],
        "summary": "Book Chalet",
        "description": "Create a chalet reservation using item ID and slot ID with embedded invoice for payment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChaletBookingRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Chalet booked successfully with invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChaletBookingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid booking data or chalet not available",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "User is not a member with active subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/swimming-pools": {
      "get": {
        "tags": ["Reservations"],
        "summary": "Get List of Swimming Pools",
        "description": "Get paginated list of swimming pools with detailed information including amenities, pricing, and dynamic content",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination",
            "example": 1
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            },
            "description": "Number of items per page",
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Swimming pools retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwimmingPoolsListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/swimming-pools/{poolId}/slots": {
      "get": {
        "tags": ["Reservations"],
        "summary": "Get Available Time Slots for Swimming Pool",
        "description": "Get available time slots for a specific swimming pool with pricing information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Swimming pool ID to get available slots for",
            "example": "pool_001"
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to check availability for (YYYY-MM-DD)",
            "example": "2025-07-15"
          }
        ],
        "responses": {
          "200": {
            "description": "Available slots retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwimmingPoolSlotsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Swimming pool not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/swimming-pools/book": {
      "post": {
        "tags": ["Reservations"],
        "summary": "Book Swimming Pool",
        "description": "Create a swimming pool reservation with embedded invoice for payment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwimmingPoolBookingRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Swimming pool booked successfully with invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwimmingPoolBookingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid booking data or time slot not available",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "User is not a member with active subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payments/status/{invoiceId}": {
      "get": {
        "tags": ["Payments"],
        "summary": "Check Payment Status",
        "description": "Check if payment was successful for a specific invoice ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Invoice ID to check payment status for",
            "example": "inv_123456"
          }
        ],
        "responses": {
          "200": {
            "description": "Payment status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invoice not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logout User",
        "description": "Logout user and invalidate tokens",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
    ,
    "/auth/check-phone": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Check User State by Phone Number",
        "description": "Checks if the user is a member and/or subscriber by phone number. Used on app open.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "required": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User state returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },

    "/notifications": {
      "get": {
        "tags": ["Notifications"],
        "summary": "Get User Notifications",
        "description": "Get paginated list of notifications for the authenticated user with filtering options",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination",
            "example": 1
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 20
            },
            "description": "Number of items per page",
            "example": 20
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["reservation", "payment", "membership", "general"]
            },
            "description": "Filter notifications by type",
            "example": "reservation"
          },
          {
            "name": "unreadOnly",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Show only unread notifications",
            "example": false
          }
        ],
        "responses": {
          "200": {
            "description": "Notifications retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationsListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{notificationId}/read": {
      "patch": {
        "tags": ["Notifications"],
        "summary": "Mark Notification as Read",
        "description": "Mark a specific notification as read for the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Notification ID to mark as read",
            "example": "notification_123456"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification marked as read successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationReadResponse"
                }
              }
            }
          },
          "404": {
            "description": "Notification not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/member/chalets/getAllReservations": {
      "get": {
        "tags": ["Reservations"],
        "summary": "Get all user chalet reservations",
        "description": "Get all chalet reservations for the authenticated user with status filtering and pagination.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination",
            "example": 1
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            },
            "description": "Number of items per page",
            "example": 10
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["upcoming", "past", "cancelled", "all"],
              "default": "upcoming"
            },
            "description": "Filter reservations by status. upcoming: upcoming reservations (default), past: past reservations, cancelled: cancelled reservations, all: all reservations",
            "example": "all"
          }
        ],
        "responses": {
          "200": {
            "description": "Chalet reservations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChaletReservationsListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/member/chalets/getReservation/{id}": {
      "get": {
        "tags": ["Reservations"],
        "summary": "Get single chalet reservation details",
        "description": "Get detailed information about a specific chalet reservation by ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Reservation ID",
            "example": 127
          }
        ],
        "responses": {
          "200": {
            "description": "Chalet reservation details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChaletReservationDetailsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Reservation not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/member/swimming-pools/getAllReservations": {
      "get": {
        "tags": ["Reservations"],
        "summary": "Get all user swimming pool reservations",
        "description": "Get all swimming pool reservations for the authenticated user with status filtering and pagination.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination",
            "example": 1
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            },
            "description": "Number of items per page",
            "example": 10
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["upcoming", "past", "cancelled", "all"],
              "default": "upcoming"
            },
            "description": "Filter reservations by status. upcoming: default, past: past reservations, cancelled: cancelled reservations, all: all reservations",
            "example": "upcoming"
          }
        ],
        "responses": {
          "200": {
            "description": "Swimming pool reservations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwimmingPoolReservationsListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/member/swimming-pools/getReservation/{id}": {
      "get": {
        "tags": ["Reservations"],
        "summary": "Get single swimming pool reservation details",
        "description": "Get detailed information about a specific swimming pool reservation by ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Reservation ID",
            "example": 32
          }
        ],
        "responses": {
          "200": {
            "description": "Swimming pool reservation details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwimmingPoolReservationDetailsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Reservation not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/news": {
      "get": {
        "tags": ["News"],
        "summary": "Get List of News Items",
        "description": "Get paginated list of news items with basic information for listing view",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination",
            "example": 1
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            },
            "description": "Number of items per page",
            "example": 10
          }
          
        ],
        "responses": {
          "200": {
            "description": "News items retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/news/{newsId}": {
      "get": {
        "tags": ["News"],
        "summary": "Get News Item Details",
        "description": "Get detailed information about a specific news item including HTML content",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "newsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "News item ID",
            "example": "news_123456"
          }
        ],
        "responses": {
          "200": {
            "description": "News item details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsDetailsResponse"
                }
              }
            }
          },
          "404": {
            "description": "News item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/member/subscription/proccess/{id}": {
      "post": {
        "tags": ["Payments"],
        "summary": "Process Subscription Payment",
        "description": "Generate payment link for subscription payment processing",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Subscription ID",
            "example": "75"
          }
        ],
        "responses": {
          "200": {
            "description": "Payment link generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPaymentProcessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Subscription not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/member/swimming-pools/proccess/{id}": {
      "post": {
        "tags": ["Payments"],
        "summary": "Process Swimming Pool Booking Payment",
        "description": "Generate payment link for swimming pool booking payment processing",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Swimming pool booking ID",
            "example": "35"
          }
        ],
        "responses": {
          "200": {
            "description": "Payment link generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwimmingPoolPaymentProcessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Swimming pool booking not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/member/chalets/proccess/{id}": {
      "post": {
        "tags": ["Payments"],
        "summary": "Process Chalet Booking Payment",
        "description": "Generate payment link for chalet booking payment processing",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Chalet booking ID",
            "example": "34"
          }
        ],
        "responses": {
          "200": {
            "description": "Payment link generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChaletPaymentProcessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Chalet booking not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/settings/getBookingTerms": {
      "get": {
        "summary": "Get booking terms and conditions",
        "description": "Retrieve the current booking terms and conditions text",
        "tags": ["Settings"],
        "responses": {
          "200": {
            "description": "Successfully retrieved booking terms",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingTermsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tents": {
      "get": {
        "tags": ["Tents"],
        "summary": "Get List of Tents",
        "description": "Get paginated list of tents with detailed information including pictures, pricing options, and extra details",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Tents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TentsListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tents/{tentId}/slots": {
      "get": {
        "tags": ["Tents"],
        "summary": "Get Tent Details with Slots",
        "description": "Get detailed information about a specific tent including its slots and availability",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "tentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Tent ID to get details for",
            "example": "2"
          }
        ],
        "responses": {
          "200": {
            "description": "Tent details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TentDetailsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tent not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tents/book": {
      "post": {
        "tags": ["Tents"],
        "summary": "Book Tent",
        "description": "Create a tent reservation using tent ID and slot ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TentBookingRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tent booked successfully with invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TentBookingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid booking data or tent not available",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "User is not a member with active subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/member/tents/proccess/{id}": {
      "post": {
        "tags": ["Payments"],
        "summary": "Process Tent Booking Payment",
        "description": "Generate payment link for tent booking payment processing",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Tent booking ID",
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Payment link generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TentPaymentProcessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tent booking not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/member/tents/getReservation/{id}": {
      "get": {
        "tags": ["Reservations"],
        "summary": "Get single tent reservation details",
        "description": "Get detailed information about a specific tent reservation by ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Tent Reservation ID",
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Tent reservation details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TentReservationDetailsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Reservation not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/member/tents/getAllReservations": {
      "get": {
        "tags": ["Reservations"],
        "summary": "Get all user tent reservations",
        "description": "Get all tent reservations for the authenticated user with status filtering and pagination.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination",
            "example": 1
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            },
            "description": "Number of items per page",
            "example": 10
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["upcoming", "past", "cancelled", "all"],
              "default": "upcoming"
            },
            "description": "Filter reservations by status. upcoming: default, past: past reservations, cancelled: cancelled reservations, all: all reservations",
            "example": "upcoming"
          }
        ],
        "responses": {
          "200": {
            "description": "Tent reservations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TentReservationsListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "UserStateResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean", "example": true },
          "message": { "type": "string", "example": "ok" },
          "expiryTime": { "type": "string", "format": "date-time", "example": "2025-06-30T12:05:00Z" },
          "membership": {
            "type": "object",
            "properties": {
              "isMember": { "type": "boolean", "example": true },
              "isSubscriber": { "type": "boolean", "example": true }
            }
          },
          "resendAfter": { "type": "integer", "example": 60 }
        },
        "example": {
          "success": true,
          "message": "ok",
          "expiryTime": "2025-06-30T12:05:00Z",
          "membership": {
            "isMember": true,
            "isSubscriber": true
          },
          "resendAfter": 60
        }
      },
      "PhoneLoginRequest": {
        "type": "object",
        "required": ["phoneNumber"],
        "properties": {
          "phoneNumber": {
            "type": "string",
            "pattern": "^(\\+965|965)?[569]\\d{7}$",
            "description": "Kuwait phone number (8 digits or with country code)",
            "example": "51234567"
          }
        }
      },
      "PhoneLoginResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "OTP sent successfully"
          },
          "expiryTime": {
            "type": "string",
            "format": "date-time",
            "description": "OTP expiry time",
            "example": "2025-06-30T12:05:00Z"
          },
          "resendAfter": {
            "type": "integer",
            "description": "Seconds to wait before resending OTP",
            "example": 60
          }
        }
      },
      "OtpVerificationRequest": {
        "type": "object",
        "required": ["phoneNumber", "otpCode"],
        "properties": {
          "phoneNumber": {
            "type": "string",
            "pattern": "^(\\+965|965)?[569]\\d{7}$",
            "description": "Kuwait phone number",
            "example": "51234567"
          },
          "otpCode": {
            "type": "string",
            "pattern": "^\\d{6}$",
            "description": "6-digit OTP code",
            "example": "123456"
          }
        }
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "accessToken": {
            "type": "string",
            "description": "JWT access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "userId": {
            "type": "string",
            "description": "Unique user identifier",
            "example": "user_123456"
          }

        }
      },
      "MemberRegistrationRequest": {
        "type": "object",
        "required": ["civilId", "name", "rank", "department"],
        "properties": {

          "name": {
            "type": "string",
            "description": "Full name in Arabic",
            "example": "أحمد محمد الكندري"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address",
            "example": "ahmed.alkandari@example.com"
          },

          "phoneNumber": {
            "type": "string",
            "description": "Police phone number",
            "example": "+96551234567"
          }
        }
      },
      "MemberRegistrationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "membershipNumber": {
            "type": "string",
            "description": "Generated membership number",
            "example": "POL2025001"
          },
          "userId": {
            "type": "string",
            "description": "User identifier",
            "example": "user_123456"
          }
        }
      },
      "SubscriptionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "hasSubscription": {
            "type": "boolean",
            "description": "Whether the member has an active subscription",
            "example": true
          },
          "subscription": {
            "type": "object",
            "nullable": true,
            "properties": {
              "id": {
                "type": "integer",
                "description": "Subscription ID",
                "example": "sub_123456"
              },
              "type": {
                "type": "string",
                "description": "Subscription type",
                "example": "annual"
              },
              "startDate": {
                "type": "string",
                "format": "date-time",
                "description": "Subscription start date",
                "example": "2025-01-01T00:00:00Z"
              },
              "expiryDate": {
                "type": "string",
                "format": "date-time",
                "description": "Subscription expiry date",
                "example": "2025-12-31T23:59:59Z"
              },
              "status": {
                "type": "string",
                "enum": ["active", "expired", "suspended"],
                "description": "Subscription status",
                "example": "active"
              }
            },
            "description": "Subscription details (null if no subscription)"
          }
        }
      },
      "CreateSubscriptionRequest": {
        "type": "object",
        "required": ["subscription_id"],
        "properties": {
          "subscription_id": {
            "type": "integer",
            "description": "ID of the subscription option to create",
            "example": 3
          }
        }
      },
      "CreateSubscriptionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "subscription": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Subscription ID",
                "example": "56"
              },
              "userId": {
                "type": "string",
                "description": "User ID",
                "example": "30"
              },
              "type": {
                "type": "string",
                "nullable": true,
                "description": "Subscription type",
                "example": null
              },
              "status": {
                "type": "string",
                "enum": ["pending_payment", "active", "expired", "suspended"],
                "description": "Subscription status",
                "example": "pending_payment"
              },
              "startDate": {
                "type": "string",
                "format": "date-time",
                "description": "Subscription start date",
                "example": "2025-07-19T23:38:18.000000Z"
              },
              "expiryDate": {
                "type": "string",
                "format": "date-time",
                "description": "Subscription expiry date",
                "example": "2028-07-19T23:38:18.000000Z"
              },
              "invoice": {
                "type": "object",
                "properties": {
                  "invoiceId": {
                    "type": "string",
                    "description": "Invoice ID for payment",
                    "example": "2025071921545107"
                  },
                  "amount": {
                    "type": "number",
                    "description": "Subscription amount in KWD",
                    "example": 360
                  },
                  "description": {
                    "type": "string",
                    "description": "Invoice description",
                    "example": "اشتراك سنوي - Annual Subscription"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["pending", "paid", "expired", "cancelled"],
                    "description": "Invoice payment status",
                    "example": "pending"
                  },
                  "expiryDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Invoice expiry date",
                    "example": "2028-07-19T23:38:18.000000Z"
                  }
                },
                "description": "Embedded invoice for subscription payment"
              }
            }
          }
        }
      },
      "SubscriptionOptionsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "subscriptionOptions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Subscription option ID",
                  "example": "1"
                },
                "name": {
                  "type": "string",
                  "description": "Subscription name in Arabic",
                  "example": "اشتراك سنوي"
                },
                "numberOfYears": {
                  "type": "integer",
                  "description": "Number of years for this subscription",
                  "example": 1
                },
                "price": {
                  "type": "integer",
                  "description": "Subscription price in KWD",
                  "example": 50
                },
                "extraInformation": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "item": {
                        "type": "string",
                        "description": "Information item description",
                        "example": "دخول جميع مرافق النادي"
                      }
                    }
                  },
                  "description": "Additional information about this subscription option",
                  "example": [
                    {"item": "دخول جميع مرافق النادي"},
                    {"item": "استخدام الصالات الرياضية"},
                    {"item": "خصومات على الفعاليات"},
                    {"item": "تذاكر الالعاب المجانية"}
                  ]
                },
                "isRecommended": {
                  "type": "boolean",
                  "description": "Whether this option is recommended",
                  "example": false
                },
                "description": {
                  "type": "string",
                  "description": "Detailed description of the subscription",
                  "example": "45.0 د/ك / سنة"
                }
              }
            },
            "description": "List of available subscription options"
          }
        }
      },
      "SubscriptionStatusResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "hasSubscription": {
            "type": "boolean",
            "description": "Whether the member has an active subscription",
            "example": true
          },
          "subscription": {
            "type": "object",
            "nullable": true,
            "properties": {
              "id": {
                "type": "string",
                "description": "Subscription ID",
                "example": "37"
              },
              "type": {
                "type": "string",
                "description": "Subscription type",
                "example": "annual"
              },
              "startDate": {
                "type": "string",
                "format": "date-time",
                "description": "Subscription start date",
                "example": "2025-07-27T22:42:15.000000Z"
              },
              "expiryDate": {
                "type": "string",
                "format": "date-time",
                "description": "Subscription expiry date",
                "example": "2027-07-27T22:42:15.000000Z"
              },
              "status": {
                "type": "string",
                "enum": ["active", "expired", "suspended"],
                "description": "Subscription status",
                "example": "active"
              }
            },
            "description": "Subscription details (null if no subscription)"
          }
        }
      },
      "TypesListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },

          "types": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Type ID",
                  "example": "1"
                },
                "name": {
                  "type": "string",
                  "description": "Type name",
                  "example": "شاليهات علي البحر"
                },
                "description": {
                  "type": "string",
                  "nullable": true,
                  "description": "Type description",
                  "example": "شاليهات علي البحر"
                },
                "address": {
                  "type": "string",
                  "nullable": true,
                  "description": "Type address",
                  "example": null
                },
                "mainPicture": {
                  "type": "string",
                  "description": "Main type image filename",
                  "example": "1750004902.png"
                },
                "pictures": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Additional type images",
                  "example": []
                },
                "priceOptions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "slotId": {
                        "type": "string",
                        "description": "Unique slot identifier",
                        "example": "7"
                      },
                      "description": {
                        "type": "string",
                        "description": "Slot description",
                        "example": "أيام العمل"
                      },
                      "available_from": {
                        "type": "string",
                        "description": "Slot available from date/time",
                        "example": "2025-07-16 23:00:00"
                      },
                      "available_to": {
                        "type": "string",
                        "description": "Slot available to date/time",
                        "example": "2025-07-18 23:00:00"
                      },
                      "booked_quantities": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Number of booked quantities",
                        "example": null
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "Total quantity",
                        "example": 1
                      },
                      "is_available": {
                        "type": "boolean",
                        "description": "Whether this slot is available for booking",
                        "example": true
                      },
                      "price": {
                        "type": "string",
                        "format": "decimal",
                        "description": "Price for this slot in KWD",
                        "example": "50.00"
                      }
                    }
                  },
                  "description": "Different pricing options with availability"
                },
                "extraDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "item": {
                        "type": "string",
                        "description": "Detail name",
                        "example": "عدد الغرف"
                      },
                      "value": {
                        "type": "string",
                        "nullable": true,
                        "description": "Detail value (can be number, text, or null)",
                        "example": "5"
                      }
                    }
                  },
                  "description": "Dynamic extra details about the type",
                  "example": [
                    {"item": "عدد الغرف", "value": "5"},
                    {"item": "المساحة", "value": "200"},
                    {"item": "عدد الأسرة", "value": "10"},
                    {"item": "عدد دورات المياه", "value": "2"}
                  ]
                }
              }
            }
          }
        }
      },
      "TypeSlotsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "id": {
            "type": "string",
            "description": "Type ID",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Type name",
            "example": "شاليهات علي البحر"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Date for the available slots",
            "example": "2025-07-16 23:00:00"
          },
          "availableSlots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "slotId": {
                  "type": "string",
                  "description": "Unique slot identifier",
                  "example": "7"
                },
                "type": {
                  "type": "string",
                  "description": "Slot type/description",
                  "example": "أيام العمل"
                },
                "from": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start date/time",
                  "example": "2025-07-16 23:00:00"
                },
                "to": {
                  "type": "string",
                  "format": "date-time",
                  "description": "End date/time",
                  "example": "2025-07-18 23:00:00"
                },
                "booked_quantities": {
                  "type": "integer",
                  "nullable": true,
                  "description": "Number of booked quantities",
                  "example": null
                },
                "quantity": {
                  "type": "integer",
                  "description": "Total quantity",
                  "example": 1
                },
                "isAvailable": {
                  "type": "boolean",
                  "description": "Whether this slot is available for booking",
                  "example": true
                },
                "price": {
                  "type": "string",
                  "format": "decimal",
                  "description": "Price for this slot in KWD",
                  "example": "50.00"
                }
              }
            },
            "description": "List of available time slots with pricing"
          }
        }
      },
      "ChaletBookingRequest": {
        "type": "object",
        "required": ["chaletId", "slotId"],
        "properties": {
          "typeId": {
            "type": "string",
            "description": "Chalet ID to book",
            "example": "chalet_001"
          },
          "slotId": {
            "type": "string",
            "description": "Time slot ID chosen for booking",
            "example": "6"
          }
        }
      },
      "ChaletBookingResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "booking": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Booking ID",
                "example": "7"
              },
              "userId": {
                "type": "string",
                "description": "User ID",
                "example": "27"
              },
              "chaletId": {
                "type": "string",
                "nullable": true,
                "description": "Chalet ID",
                "example": null
              },
              "chaletName": {
                "type": "string",
                "description": "Chalet name",
                "example": "test"
              },
              "slotId": {
                "type": "string",
                "description": "Booked slot ID",
                "example": "7"
              },
              "bookingDate": {
                "type": "string",
                "format": "date-time",
                "description": "Booking date and time",
                "example": "2025-07-16 23:00:00"
              },
              "timeFrom": {
                "type": "string",
                "format": "time",
                "description": "Start time",
                "example": "00:00"
              },
              "timeTo": {
                "type": "string",
                "format": "time",
                "description": "End time",
                "example": "00:00"
              },
              "comments": {
                "type": "string",
                "nullable": true,
                "description": "Additional comments",
                "example": null
              },
              "status": {
                "type": "string",
                "enum": ["pending_payment", "confirmed", "cancelled", "completed"],
                "description": "Booking status",
                "example": "pending_payment"
              },
              "invoice": {
                "type": "object",
                "properties": {
                  "invoiceId": {
                    "type": "string",
                    "description": "Invoice ID for payment",
                    "example": "34"
                  },
                  "amount": {
                    "type": "string",
                    "description": "Booking amount in KWD",
                    "example": "50.00"
                  },
                  "description": {
                    "type": "string",
                    "description": "Invoice description",
                    "example": ""
                  },
                  "status": {
                    "type": "string",
                    "enum": ["pending", "paid", "expired", "cancelled"],
                    "description": "Invoice payment status",
                    "example": "pending"
                  },
                  "expiryDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Invoice expiry date",
                    "example": "2025-07-23 00:00:00"
                  }
                },
                "description": "Embedded invoice for booking payment"
              }
            }
          }
        }
      },
      "SwimmingPoolsListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },

          "pools": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Swimming pool ID",
                  "example": "pool_001"
                },
                "name": {
                  "type": "string",
                  "description": "Pool name in Arabic",
                  "example": "المسبح الأولمبي"
                },
                "description": {
                  "type": "string",
                  "description": "Pool description",
                  "example": "مسبح أولمبي بمواصفات عالمية للسباحة والتدريب"
                },
                "type": {
                  "type": "string",
                  "description": "Pool type/category",
                  "example": "أولمبي"
                },
                "isAvailable": {
                  "type": "boolean",
                  "description": "Whether the pool is available for booking",
                  "example": true
                },
                "amenities": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of amenities",
                  "example": ["خزائن حفظ", "كراسي استلقاء", "دورات مياه", "كافيتيريا", "منقذ"]
                },
                "priceOptions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Price description",
                        "example": "مسائي"
                      },
                      "price": {
                        "type": "string",
                        "format": "decimal",
                        "description": "Price per hour in KWD as string",
                        "example": "8.000"
                      }
                    }
                  },
                  "description": "Different pricing options per hour",
                  "example": [
                    {"description": "صباحي", "price": "5.000"},
                    {"description": "مسائي", "price": "8.000"},
                    {"description": "نهاية الأسبوع", "price": "10.000"}
                  ]
                },
                "mainPicture": {
                  "type": "string",
                  "description": "Main pool image URL",
                  "example": "https://api.policeclub.kw/images/pools/001_main.jpg"
                },
                "pictures": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Additional pool images URLs",
                  "example": [
                    "https://api.policeclub.kw/images/pools/001_1.jpg",
                    "https://api.policeclub.kw/images/pools/001_2.jpg"
                  ]
                },
                "extraDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "item": {
                        "type": "string",
                        "description": "Detail name",
                        "example": "السعة"
                      },
                      "value": {
                        "type": "string",
                        "description": "Detail value (can be number or text)",
                        "example": "30"
                      }
                    }
                  },
                  "description": "Dynamic extra details about the pool",
                  "example": [
                    {"item": "السعة", "value": "30"},
                    {"item": "العمق", "value": "2 متر"},
                    {"item": "الطول", "value": "50 متر"},
                    {"item": "العرض", "value": "25 متر"}
                  ]
                }
              }
            }
          }
        }
      },
      "SwimmingPoolSlotsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "poolId": {
            "type": "string",
            "description": "Swimming pool ID",
            "example": "pool_001"
          },
          "poolName": {
            "type": "string",
            "description": "Pool name",
            "example": "المسبح الأولمبي"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date for the available slots",
            "example": "2025-07-15"
          },
          "availableSlots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "slotId": {
                  "type": "string",
                  "description": "Unique slot identifier",
                  "example": "3"
                },
                "available_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Available date for this slot",
                  "example": "2025-07-19"
                },
                "booked_quantities": {
                  "type": "integer",
                  "nullable": true,
                  "description": "Number of booked quantities",
                  "example": null
                },
                "quantity": {
                  "type": "integer",
                  "description": "Total quantity/capacity",
                  "example": 500
                },
                "price": {
                  "type": "string",
                  "format": "decimal",
                  "description": "Price for this slot in KWD",
                  "example": "200.000"
                },
                "type": {
                  "type": "string",
                  "description": "Slot type/description",
                  "example": "صباحي"
                },
                "isAvailable": {
                  "type": "boolean",
                  "description": "Whether this slot is available for booking",
                  "example": true
                }
              }
            },
            "description": "List of available time slots with pricing"
          }
        }
      },
      "SwimmingPoolBookingRequest": {
        "type": "object",
        "required": ["slotId", "persons"],
        "properties": {
          "slotId": {
            "type": "string",
            "description": "Time slot ID chosen for booking",
            "example": "2"
          },
          "persons": {
            "type": "integer",
            "description": "Number of people/swimmers",
            "example": 5
          }
        }
      },
      "SwimmingPoolBookingResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "booking": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Booking ID",
                "example": "booking_pool_123456"
              },
              "userId": {
                "type": "string",
                "description": "User ID",
                "example": "user_123456"
              },
              "poolId": {
                "type": "string",
                "description": "Pool ID",
                "example": "pool_001"
              },
              "poolName": {
                "type": "string",
                "description": "Pool name",
                "example": "المسبح الأولمبي"
              },
              "slotId": {
                "type": "integer",
                "nullable": true,
                "description": "Booked slot ID",
                "example": 1
              },
              "bookingDate": {
                "type": "string",
                "format": "date",
                "nullable": true,
                "description": "Booking date",
                "example": "2025-07-15"
              },
              "startTime": {
                "type": "string",
                "format": "time",
                "description": "Start time",
                "example": "09:00"
              },
              "endTime": {
                "type": "string",
                "format": "time",
                "description": "End time",
                "example": "10:00"
              },
              "numberOfPeople": {
                "type": "integer",
                "description": "Number of people/swimmers",
                "example": 8
              },
              "comments": {
                "type": "string",
                "description": "Additional comments",
                "example": "نحتاج مدرب سباحة للأطفال"
              },
              "status": {
                "type": "string",
                "enum": ["pending_payment", "confirmed", "cancelled", "completed"],
                "description": "Booking status",
                "example": "pending_payment"
              },
              "invoice": {
                "type": "object",
                "properties": {
                  "invoiceId": {
                    "type": "string",
                    "description": "Invoice ID for payment",
                    "example": "35"
                  },
                  "amount": {
                    "type": "string",
                    "description": "Booking amount in KWD",
                    "example": "50.000"
                  },
                  "description": {
                    "type": "string",
                    "description": "Invoice description",
                    "example": ""
                  },
                  "status": {
                    "type": "string",
                    "enum": ["pending", "paid", "expired", "cancelled"],
                    "description": "Invoice payment status",
                    "example": "pending"
                  },
                  "expiryDate": {
                    "type": "string",
                    "nullable": true,
                    "format": "date-time",
                    "description": "Invoice expiry date",
                    "example": null
                  }
                },
                "description": "Embedded invoice for booking payment"
              }
            }
          }
        }
      },
      "PaymentStatusResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID",
            "example": "inv_123456789"
          },
          "paymentId": {
            "type": "string",
            "description": "Payment transaction ID",
            "example": "pay_987654321"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "paid", "failed", "cancelled", "expired"],
            "description": "Payment status",
            "example": "paid"
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "description": "Payment amount in KWD",
            "example": 25.000
          },
          "paidAt": {
            "type": "string",
            "format": "date-time",
            "description": "Payment completion timestamp (null if not paid)",
            "example": "2025-06-30T14:30:00Z"
          },
          "paymentMethod": {
            "type": "string",
            "description": "Payment method used",
            "example": "knet"
          },
          "transactionReference": {
            "type": "string",
            "description": "Payment gateway transaction reference",
            "example": "KNET_REF_123456"
          }
        }
      },
      "PaymentProcessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "booking": {
            "type": "object",
            "properties": {
              "id": { "type": "string", "description": "Booking ID" },
              "userId": { "type": "integer", "description": "User ID" },
              "chaletId": { "type": ["string", "null"], "description": "Chalet ID" },
              "chaletName": { "type": "string", "description": "Chalet name" },
              "slotId": { "type": "integer", "description": "Slot ID" },
              "bookingDate": { "type": "string", "description": "Booking date" },
              "timeFrom": { "type": "string", "description": "Start time" },
              "timeTo": { "type": "string", "description": "End time" },
              "comments": { "type": ["string", "null"], "description": "Comments" },
              "status": { "type": "string", "description": "Booking status" },
              "url": { "type": "string", "description": "Payment URL for completing the payment" },
              "invoice": {
                "type": "object",
                "properties": {
                  "invoiceId": { "type": "string", "description": "Invoice ID" },
                  "amount": { "type": "string", "description": "Booking amount in KWD" },
                  "description": { "type": "string", "description": "Invoice description" },
                  "status": { "type": "string", "description": "Invoice payment status" },
                  "expiryDate": { "type": "string", "description": "Invoice expiry date" }
                }
              }
            }
          }
        }
      },
      "SubscriptionPaymentProcessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "url": {
            "type": "string",
            "description": "Payment URL for completing the subscription payment",
            "example": "https://payment.gateway.com/pay/subscription/12345"
          }
        }
      },
      "ChaletPaymentProcessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "booking": {
            "type": "object",
            "properties": {
              "id": { "type": "string", "description": "Booking ID" },
              "userId": { "type": "integer", "description": "User ID" },
              "chaletId": { "type": ["string", "null"], "description": "Chalet ID" },
              "chaletName": { "type": "string", "description": "Chalet name" },
              "slotId": { "type": "integer", "description": "Slot ID" },
              "bookingDate": { "type": "string", "description": "Booking date" },
              "timeFrom": { "type": "string", "description": "Start time" },
              "timeTo": { "type": "string", "description": "End time" },
              "comments": { "type": ["string", "null"], "description": "Comments" },
              "status": { "type": "string", "description": "Booking status" },
              "url": { "type": "string", "description": "Payment URL for completing the payment" },
              "invoice": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "description": "Invoice ID" },
                  "amount": { "type": "string", "description": "Invoice amount" },
                  "currency": { "type": "string", "description": "Currency" },
                  "status": { "type": "string", "description": "Invoice payment status" },
                  "expiryDate": { "type": "string", "description": "Invoice expiry date" }
                }
              }
            }
          }
        }
      },
      "SwimmingPoolPaymentProcessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "booking": {
            "type": "object",
            "properties": {
              "id": { "type": "string", "description": "Booking ID" },
              "userId": { "type": "integer", "description": "User ID" },
              "poolId": { "type": "string", "description": "Swimming pool ID" },
              "poolName": { "type": "string", "description": "Swimming pool name" },
              "slotId": { "type": "integer", "description": "Slot ID" },
              "bookingDate": { "type": "string", "description": "Booking date" },
              "timeFrom": { "type": "string", "description": "Start time" },
              "timeTo": { "type": "string", "description": "End time" },
              "peopleCount": { "type": "integer", "description": "Number of people" },
              "status": { "type": "string", "description": "Booking status" },
              "url": { "type": "string", "description": "Payment URL for completing the payment" },
              "invoice": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "description": "Invoice ID" },
                  "amount": { "type": "string", "description": "Invoice amount" },
                  "currency": { "type": "string", "description": "Currency" },
                  "status": { "type": "string", "description": "Invoice payment status" },
                  "expiryDate": { "type": "string", "description": "Invoice expiry date" }
                }
              }
            }
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Logout successful"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique user identifier",
            "example": "user_123456"
          },
          "civilId": {
            "type": "string",
            "description": "Kuwait Civil ID",
            "example": "123456789012"
          },
          "name": {
            "type": "string",
            "description": "Full name in Arabic",
            "example": "أحمد محمد الكندري"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address",
            "example": "ahmed.alkandari@example.com"
          },
          "phone": {
            "type": "string",
            "description": "Phone number",
            "example": "51234567"
          },
          "membershipNumber": {
            "type": "string",
            "description": "Police club membership number",
            "example": "POL2024001"
          },
          "rank": {
            "type": "string",
            "description": "Police rank",
            "example": "نقيب"
          },
          "department": {
            "type": "string",
            "description": "Police department",
            "example": "الأمن العام"
          },
          "membershipStatus": {
            "type": "string",
            "enum": ["not_member", "member", "member_without_subscription", "member_with_active_subscription"],
            "example": "member_with_active_subscription"
          },
          "isSubscribed": {
            "type": "boolean",
            "description": "Active subscription status",
            "example": true
          },
          "subscriptionExpiry": {
            "type": "string",
            "format": "date-time",
            "description": "Subscription expiry date",
            "example": "2025-12-31T23:59:59Z"
          },
          "profilePicture": {
            "type": "string",
            "description": "Profile picture URL",
            "example": "https://api.policeclub.kw/images/profiles/user_123456.jpg"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-30T12:00:00Z"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Error code",
                "example": "INVALID_PHONE_NUMBER"
              },
              "message": {
                "type": "string",
                "description": "Human-readable error message",
                "example": "رقم الهاتف غير صحيح أو غير مسجل"
              },
              "details": {
                "type": "object",
                "description": "Additional error details",
                "example": {
                  "field": "phoneNumber",
                  "reason": "Invalid format or not registered"
                }
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-30T12:00:00Z"
          },
          "requestId": {
            "type": "string",
            "description": "Unique request identifier for debugging",
            "example": "req_abc123def456"
          }
        }
      },
      "NotificationsListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },

          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notification"
            }
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "notification_123456"
          },
          "type": {
            "type": "string",
            "enum": ["reservation", "payment", "membership", "general"],
            "example": "reservation"
          },
          "title": {
            "type": "string",
            "example": "تأكيد الحجز"
          },
          "message": {
            "type": "string",
            "example": "تم تأكيد حجز الشاليه بنجاح"
          },
          "isRead": {
            "type": "boolean",
            "example": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-30T12:00:00Z"
          },
          "relatedEntityType": {
            "type": "string",
            "example": "chalet_booking"
          },
          "relatedEntityId": {
            "type": "string",
            "example": "booking_123456"
          }
        }
      },
      "NotificationReadResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "تم تحديث الإشعار بنجاح"
          }
        }
      },
      "ChaletReservationsListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
      
          "reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChaletReservationDetail"
            }
          }
        }
      },
      "SimpleReservation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 7
          },
          "member_id": {
            "type": "integer",
            "example": 30
          },
          "unit_id": {
            "type": "integer",
            "nullable": true,
            "example": null
          },
          "admin_id": {
            "type": "integer",
            "nullable": true,
            "example": null
          },
          "unit_type_id": {
            "type": "integer",
            "example": 1
          },
          "availability_id": {
            "type": "integer",
            "example": 7
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-16T23:00:00.000000Z"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-18T23:00:00.000000Z"
          },
          "guests": {
            "type": "integer",
            "example": 0
          },
          "status": {
            "type": "string",
            "enum": ["pending", "paid", "finished"],
            "example": "pending",
            "description": "pending: في انتظار الدفع, paid: في انتظار التسكين, finished: العميل خرج"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-19T10:25:56.000000Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-19T10:25:56.000000Z"
          },
          "tap_id": {
            "type": "string",
            "nullable": true,
            "example": "chg_TS04A3420251242t5NL1907949"
          }
        },
        "required": ["id", "member_id", "unit_type_id", "availability_id", "start_date", "end_date", "guests", "status", "created_at", "updated_at"]
      },
      "SwimmingPoolReservationsListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },

          "reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SwimmingPoolReservationDetail"
            }
          }
        }
      },
      "SwimmingPoolReservationDetailsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "reservation": {
            "$ref": "#/components/schemas/SwimmingPoolReservationDetail"
          }
        }
      },
      "ChaletReservationDetailsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "reservation": {
            "$ref": "#/components/schemas/ChaletReservationDetail"
          }
        }
      },
      "SwimmingPoolReservationDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 32
          },
          "member_id": {
            "type": "integer",
            "example": 58
          },
          "pool_availability_id": {
            "type": "integer",
            "example": 20
          },
          "persons": {
            "type": "integer",
            "example": 8
          },
          "total_price": {
            "type": "string",
            "example": "416.000"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "paid", "finished"],
            "example": "paid",
            "description": "pending: في انتظار الدفع, paid: في انتظار التسكين, finished: العميل خرج"
          },
          "uuid": {
            "type": "string",
            "example": "cfa7e91e-3c5f-4bb0-9325-bd4d71b40df7"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-29T03:51:53.000000Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-29T03:52:20.000000Z"
          },
          "tap_id": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "qrcode": {
            "type": "string",
            "example": "https://api256413.policeclubkw.com/api/member/qrcode/pool_reservation/32"
          }
        },
        "required": ["id", "member_id", "pool_availability_id", "persons", "total_price", "status", "uuid", "created_at", "updated_at", "qrcode"]
      },
      "ChaletReservationDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 127
          },
          "member_id": {
            "type": "integer",
            "example": 58
          },
          "unit_id": {
            "type": "integer",
            "nullable": true,
            "example": null
          },
          "admin_id": {
            "type": "integer",
            "nullable": true,
            "example": null
          },
          "unit_type_id": {
            "type": "integer",
            "example": 12
          },
          "availability_id": {
            "type": "integer",
            "example": 35
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-14T00:00:00.000000Z"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-16T00:00:00.000000Z"
          },
          "guests": {
            "type": "integer",
            "example": 0
          },
          "status": {
            "type": "string",
            "enum": ["pending", "paid", "finished"],
            "example": "paid",
            "description": "pending: في انتظار الدفع, paid: في انتظار التسكين, finished: العميل خرج"
          },
          "uuid": {
            "type": "string",
            "example": "743ae6e0-82da-4d6e-8bfd-ee8993b0f8a1"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-29T03:52:40.000000Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-29T03:53:12.000000Z"
          },
          "tap_id": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "qrcode": {
            "type": "string",
            "example": "https://api256413.policeclubkw.com/api/member/qrcode/reservation/127"
          }
        },
        "required": ["id", "member_id", "unit_type_id", "availability_id", "start_date", "end_date", "guests", "status", "uuid", "created_at", "updated_at", "qrcode"]
      },
      "ChaletReservationsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },

          "reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChaletReservation"
            }
          }
        }
      },
      "SwimmingPoolReservationsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },

          "reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SwimmingPoolReservation"
            }
          }
        }
      },
      "Chalets": {
        "type": "object",
        "description": "Individual chalet/type information",
        "properties": {
          "id": {
            "type": "string",
            "description": "Type ID",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Type name",
            "example": "شاليهات علي البحر"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Type description",
            "example": "شاليهات علي البحر"
          },
          "address": {
            "type": "string",
            "nullable": true,
            "description": "Type address",
            "example": null
          },
          "mainPicture": {
            "type": "string",
            "description": "Main type image filename",
            "example": "1750004902.png"
          },
          "pictures": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional type images",
            "example": []
          },
          "priceOptions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "slotId": {
                  "type": "string",
                  "description": "Unique slot identifier",
                  "example": "7"
                },
                "description": {
                  "type": "string",
                  "description": "Slot description",
                  "example": "أيام العمل"
                },
                "available_from": {
                  "type": "string",
                  "description": "Slot available from date/time",
                  "example": "2025-07-16 23:00:00"
                },
                "available_to": {
                  "type": "string",
                  "description": "Slot available to date/time",
                  "example": "2025-07-18 23:00:00"
                },
                "booked_quantities": {
                  "type": "integer",
                  "nullable": true,
                  "description": "Number of booked quantities",
                  "example": null
                },
                "quantity": {
                  "type": "integer",
                  "description": "Total quantity",
                  "example": 1
                },
                "is_available": {
                  "type": "boolean",
                  "description": "Whether this slot is available for booking",
                  "example": true
                },
                "price": {
                  "type": "string",
                  "format": "decimal",
                  "description": "Price for this slot in KWD",
                  "example": "50.00"
                }
              }
            },
            "description": "Different pricing options with availability"
          },
          "extraDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "item": {
                  "type": "string",
                  "description": "Detail name",
                  "example": "عدد الغرف"
                },
                "value": {
                  "type": "string",
                  "nullable": true,
                  "description": "Detail value (can be number, text, or null)",
                  "example": "5"
                }
              }
            },
            "description": "Dynamic extra details about the type",
            "example": [
              {"item": "عدد الغرف", "value": "5"},
              {"item": "المساحة", "value": "200"},
              {"item": "عدد الأسرة", "value": "10"},
              {"item": "عدد دورات المياه", "value": "2"}
            ]
          }
        }
      },
      "ChaletReservation": {
        "type": "object",
        "description": "A chalet reservation containing complete chalet information and chalet-specific reservation details",
        "properties": {
          "chalet": {
            "$ref": "#/components/schemas/Chalets"
          },
          "reservationInfo": {
            "$ref": "#/components/schemas/ChaletReservationInfo"
          }
        },
        "required": ["chalet", "reservationInfo"]
      },
      "SwimmingPools": {
        "type": "object",
        "description": "Individual swimming pool information",
        "properties": {
          "id": {
            "type": "string",
            "description": "Swimming pool ID",
            "example": "pool_001"
          },
          "name": {
            "type": "string",
            "description": "Pool name in Arabic",
            "example": "المسبح الأولمبي"
          },
          "description": {
            "type": "string",
            "description": "Pool description",
            "example": "مسبح أولمبي بمواصفات عالمية للسباحة والتدريب"
          },
          "type": {
            "type": "string",
            "description": "Pool type/category",
            "example": "أولمبي"
          },
          "isAvailable": {
            "type": "boolean",
            "description": "Whether the pool is available for booking",
            "example": true
          },
          "amenities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of amenities",
            "example": ["خزائن حفظ", "كراسي استلقاء", "دورات مياه", "كافيتيريا", "منقذ"]
          },
          "priceOptions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "description": "Price description",
                  "example": "مسائي"
                },
                "price": {
                  "type": "string",
                  "format": "decimal",
                  "description": "Price per hour in KWD as string",
                  "example": "8.000"
                }
              }
            },
            "description": "Different pricing options per hour",
            "example": [
              {"description": "صباحي", "price": "5.000"},
              {"description": "مسائي", "price": "8.000"},
              {"description": "نهاية الأسبوع", "price": "10.000"}
            ]
          },
          "mainPicture": {
            "type": "string",
            "description": "Main pool image URL",
            "example": "https://api.policeclub.kw/images/pools/001_main.jpg"
          },
          "pictures": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional pool images URLs",
            "example": [
              "https://api.policeclub.kw/images/pools/001_1.jpg",
              "https://api.policeclub.kw/images/pools/001_2.jpg"
            ]
          },
          "extraDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "item": {
                  "type": "string",
                  "description": "Detail name",
                  "example": "السعة"
                },
                "value": {
                  "type": "string",
                  "description": "Detail value (can be number or text)",
                  "example": "30"
                }
              }
            },
            "description": "Dynamic extra details about the pool",
            "example": [
              {"item": "السعة", "value": "30"},
              {"item": "العمق", "value": "2 متر"},
              {"item": "الطول", "value": "50 متر"},
              {"item": "العرض", "value": "25 متر"}
            ]
          }
        }
      },
      "SwimmingPoolReservation": {
        "type": "object",
        "description": "A swimming pool reservation containing complete swimming pool information and pool-specific reservation details",
        "properties": {
          "swimmingPool": {
            "$ref": "#/components/schemas/SwimmingPools"
          },
          "reservationInfo": {
            "$ref": "#/components/schemas/SwimmingPoolReservationInfo"
          }
        },
        "required": ["swimmingPool", "reservationInfo"]
      },
      "ChaletReservationInfo": {
        "type": "object",
        "description": "Reservation information specific to chalet bookings",
        "properties": {
          "id": {
            "type": "string",
            "example": "reservation_ch_123456"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "confirmed", "cancelled", "completed"],
            "example": "confirmed"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2025-07-15"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2025-07-16"
          },
          "slotId": {
            "type": "string",
            "example": "slot_chalet_001_20250715"
          },
          "price": {
            "type": "number",
            "example": 75.000
          },
          "invoice": {
            "type": "object",
            "properties": {
              "invoiceId": {
                "type": "string",
                "example": "inv_ch_123456"
              },
              "amount": {
                "type": "number",
                "example": 75.000
              }
            }
          },
          "membershipNumber": {
            "type": "string",
            "example": "POL2025001"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-30T12:00:00Z"
          }
        },
        "required": ["id", "status", "startDate", "endDate", "slotId", "price", "invoice", "membershipNumber", "createdAt"]
      },
      "SwimmingPoolReservationInfo": {
        "type": "object",
        "description": "Reservation information specific to swimming pool bookings",
        "properties": {
          "id": {
            "type": "string",
            "example": "reservation_sp_123456"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "confirmed", "cancelled", "completed"],
            "example": "confirmed"
          },
          "bookingDate": {
            "type": "string",
            "format": "date",
            "example": "2025-07-15"
          },
          "startTime": {
            "type": "string",
            "format": "time",
            "example": "16:00"
          },
          "endTime": {
            "type": "string",
            "format": "time",
            "example": "18:00"
          },
          "duration": {
            "type": "integer",
            "description": "Duration in minutes",
            "example": 120
          },
          "slotId": {
            "type": "string",
            "example": "slot_pool_001_20250715_1600"
          },
          "price": {
            "type": "number",
            "example": 15.000
          },
          "invoice": {
            "type": "object",
            "properties": {
              "invoiceId": {
                "type": "string",
                "example": "inv_sp_123456"
              },
              "amount": {
                "type": "number",
                "example": 15.000
              },
              "status": {
                "type": "string",
                "enum": ["pending", "paid", "cancelled"],
                "example": "paid"
              }
            }
          },
          "membershipNumber": {
            "type": "string",
            "example": "POL2025001"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-30T12:00:00Z"
          }
        },
        "required": ["id", "status", "bookingDate", "startTime", "endTime", "duration", "slotId", "price", "invoice", "membershipNumber", "createdAt"]
      },
      "NewsListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },

          "news": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewsItem"
            }
          }
        }
      },
      "NewsItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "news_123456"
          },
          "title": {
            "type": "string",
            "example": "إعلان عن فعالية رياضية جديدة"
          },
          "summary": {
            "type": "string",
            "example": "ينظم النادي فعالية رياضية مميزة لجميع الأعضاء والمشتركين"
          },

          "thumbnailImage": {
            "type": "string",
            "description": "URL of the news thumbnail image",
            "example": "https://api256413.policeclubkw.com/uploads/news/thumb_123456.jpg"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-15T10:30:00Z"
          }

 
        }
      },
      "NewsDetailsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "news": {
            "$ref": "#/components/schemas/NewsDetails"
          }
        }
      },
      "NewsDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "news_123456"
          },
          "title": {
            "type": "string",
            "example": "إعلان عن فعالية رياضية جديدة"
          },
          "summary": {
            "type": "string",
            "example": "ينظم النادي فعالية رياضية مميزة لجميع الأعضاء والمشتركين"
          },

          "thumbnailImage": {
            "type": "string",
            "description": "URL of the news thumbnail image",
            "example": "https://api256413.policeclubkw.com/uploads/news/thumb_123456.jpg"
          },

          "htmlContent": {
            "type": "string",
            "description": "Full HTML content of the news article",
            "example": "<div class=\"news-content\"><h2>تفاصيل الفعالية</h2><p>تهدف هذه الفعالية إلى تعزيز الروح الرياضية...</p><img src=\"https://api256413.policeclubkw.com/uploads/news/content_123456.jpg\" alt=\"صورة الفعالية\" /><p>للمشاركة يرجى التسجيل عبر التطبيق.</p></div>"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-15T10:30:00Z"
          }

      


        }
      }
    ,
    "SwimmingPoolReservationRequest": {
      "type": "object",
      "required": ["slotId", "peopleCount"],
      "properties": {
        "slotId": { "type": "string", "example": "slot_123" },
        "peopleCount": { "type": "integer", "example": 3 },
        "notes": { "type": "string", "example": "Birthday party" }
      }
    },
    "SwimmingPoolReservationResponse": {
      "type": "object",
      "properties": {
        "success": { "type": "boolean", "example": true },
        "reservation": { "$ref": "#/components/schemas/SwimmingPoolReservation" }
      }
    },
    "ChaletReservationRequest": {
      "type": "object",
      "required": ["chaletId", "startDate", "endDate", "peopleCount"],
      "properties": {
        "chaletId": { "type": "string", "example": "chalet_789" },
        "startDate": { "type": "string", "format": "date", "example": "2025-08-01" },
        "endDate": { "type": "string", "format": "date", "example": "2025-08-03" },
        "peopleCount": { "type": "integer", "example": 5 },
        "notes": { "type": "string", "example": "Family trip" }
      }
    },
    "ChaletReservationResponse": {
      "type": "object",
      "properties": {
        "success": { "type": "boolean", "example": true },
        "reservation": { "$ref": "#/components/schemas/ChaletReservation" }
      }
    },
    "BookingTermsResponse": {
      "type": "object",
      "properties": {
        "success": { 
          "type": "boolean", 
          "example": true 
        },
        "terms": { 
          "type": "string", 
          "example": "هذا النص هو مثال لنص يمكن أن يستبدل في نفس المساحة، لقد تم توليد هذا النص من مولد النص العربى، حيث يمكنك أن تولد مثل هذا النص أو العديد من النصوص الأخرى إضافة إلى زيادة عدد الحروف التى يولدها التطبيق. إذا كنت تحتاج إلى عدد أكبر من الفقرات يتيح لك مولد النص العربى زيادة عدد الفقرات كما تريد، النص لن يبدو مقسما ولا يحوي أخطاء لغوية." 
        }
      }
    },
    "TentsListResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "pagination": {
          "type": "object",
          "properties": {
            "currentPage": {
              "type": "integer",
              "description": "Current page number",
              "example": 1
            },
            "totalPages": {
              "type": "integer",
              "description": "Total number of pages",
              "example": 1
            },
            "totalItems": {
              "type": "integer",
              "description": "Total number of tents",
              "example": 9
            },
            "itemsPerPage": {
              "type": "integer",
              "description": "Number of items per page",
              "example": 10
            }
          }
        },
        "tents": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Tent"
          }
        }
      }
    },
    "TentDetailsResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "Tent ID",
          "example": "11"
        },
        "name": {
          "type": "string",
          "description": "Tent name",
          "example": "KX1CJ"
        },
        "type_id": {
          "type": "string",
          "description": "Tent type ID",
          "example": "2"
        },
        "type_name": {
          "type": "string",
          "description": "Tent type name",
          "example": "نوع رقم 1"
        },
        "description": {
          "type": "string",
          "nullable": true,
          "description": "Tent description",
          "example": null
        },
        "mainPicture": {
          "type": "string",
          "description": "Main tent image URL",
          "example": "https://ad26526.policeclubkw.com/uploads/tents/"
        },
        "pictures": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Additional tent images URLs",
          "example": [
            "https://ad26526.policeclubkw.com/uploads/tents/1.jpeg",
            "https://ad26526.policeclubkw.com/uploads/tents/2.jpeg",
            "https://ad26526.policeclubkw.com/uploads/tents/3.jpeg",
            "https://ad26526.policeclubkw.com/uploads/tents/4.jpeg"
          ]
        },
        "priceOptions": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/TentPriceOption"
          },
          "description": "Pricing options for the tent"
        },
        "isAvailable": {
          "type": "boolean",
          "description": "Whether the tent is available for booking",
          "example": true
        },
        "extraDetails": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/ExtraDetail"
          },
          "description": "Dynamic extra details about the tent"
        }
      }
    },
    "Tent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Tent ID",
          "example": "11"
        },
        "name": {
          "type": "string",
          "description": "Tent name",
          "example": "KX1CJ"
        },
        "type_id": {
          "type": "string",
          "description": "Tent type ID",
          "example": "2"
        },
        "type_name": {
          "type": "string",
          "description": "Tent type name",
          "example": "نوع رقم 1"
        },
        "description": {
          "type": "string",
          "nullable": true,
          "description": "Tent description",
          "example": null
        },
        "mainPicture": {
          "type": "string",
          "description": "Main tent image URL",
          "example": "https://ad26526.policeclubkw.com/uploads/tents/"
        },
        "pictures": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Additional tent images URLs",
          "example": [
            "https://ad26526.policeclubkw.com/uploads/tents/1.jpeg",
            "https://ad26526.policeclubkw.com/uploads/tents/2.jpeg",
            "https://ad26526.policeclubkw.com/uploads/tents/3.jpeg",
            "https://ad26526.policeclubkw.com/uploads/tents/4.jpeg"
          ]
        },
        "priceOptions": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/TentPriceOption"
          },
          "description": "Pricing options for the tent"
        },
        "isAvailable": {
          "type": "boolean",
          "description": "Whether the tent is available for booking",
          "example": true
        },
        "extraDetails": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/ExtraDetail"
          },
          "description": "Dynamic extra details about the tent"
        }
      }
    },
    "ExtraDetail": {
      "type": "object",
      "properties": {
        "item": {
          "type": "string",
          "description": "Detail name",
          "example": "السعة"
        },
        "value": {
          "type": "string",
          "description": "Detail value",
          "example": "30"
        }
      }
    },
    "TentPriceOption": {
      "type": "object",
      "properties": {
        "slotId": {
          "type": "string",
          "description": "Unique slot identifier",
          "example": "40"
        },
        "available_date": {
          "type": "string",
          "format": "date",
          "description": "Available date for this slot",
          "example": "2025-08-16"
        },
        "booked_quantities": {
          "type": "integer",
          "nullable": true,
          "description": "Number of booked quantities",
          "example": null
        },
        "quantity": {
          "type": "integer",
          "description": "Total quantity/capacity",
          "example": 5
        },
        "is_available": {
          "type": "boolean",
          "description": "Whether this slot is available for booking",
          "example": true
        },
        "price": {
          "type": "string",
          "format": "decimal",
          "description": "Price for this slot in KWD",
          "example": "12.000"
        },
        "type": {
          "type": "string",
          "description": "Slot type/description",
          "example": "صباحي"
        },
        "countAvailable": {
          "type": "integer",
          "description": "Count of available slots",
          "example": 5
        }
      }
    },
    "TentBookingRequest": {
      "type": "object",
      "required": ["tentId", "slotId"],
      "properties": {
        "tentId": {
          "type": "integer",
          "description": "Tent ID to book",
          "example": 11
        },
        "slotId": {
          "type": "integer",
          "description": "Time slot ID chosen for booking",
          "example": 39
        }
      }
    },
    "TentBookingResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "booking": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Booking ID",
              "example": "8"
            },
            "userId": {
              "type": "string",
              "description": "User ID",
              "example": "4"
            },
            "tentId": {
              "type": "string",
              "description": "Tent ID",
              "example": "11"
            },
            "tentName": {
              "type": "string",
              "description": "Tent name",
              "example": "KX1CJ"
            },
            "slotId": {
              "type": "string",
              "nullable": true,
              "description": "Booked slot ID",
              "example": null
            },
            "bookingDate": {
              "type": "string",
              "nullable": true,
              "format": "date-time",
              "description": "Booking date and time",
              "example": null
            },
            "numberOfPeople": {
              "type": "integer",
              "description": "Number of people",
              "example": 5
            },
            "startTime": {
              "type": "string",
              "format": "time",
              "description": "Start time",
              "example": "00:00"
            },
            "endTime": {
              "type": "string",
              "format": "time",
              "description": "End time",
              "example": "00:00"
            },
            "comments": {
              "type": "string",
              "description": "Additional comments",
              "example": ""
            },
            "status": {
              "type": "string",
              "enum": ["pending_payment", "confirmed", "cancelled", "completed"],
              "description": "Booking status",
              "example": "pending_payment"
            },
            "invoice": {
              "type": "object",
              "properties": {
                "invoiceId": {
                  "type": "string",
                  "description": "Invoice ID for payment",
                  "example": "8"
                },
                "amount": {
                  "type": "string",
                  "description": "Booking amount in KWD",
                  "example": "12.000"
                },
                "description": {
                  "type": "string",
                  "description": "Invoice description",
                  "example": ""
                },
                "status": {
                  "type": "string",
                  "enum": ["pending", "paid", "expired", "cancelled"],
                  "description": "Invoice payment status",
                  "example": "pending"
                },
                "expiryDate": {
                  "type": "string",
                  "nullable": true,
                  "format": "date-time",
                  "description": "Invoice expiry date",
                  "example": null
                }
              },
              "description": "Embedded invoice for booking payment"
            }
          }
        }
      }
    },
    "TentPaymentProcessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "booking": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Booking ID",
              "example": "8"
            },
            "userId": {
              "type": "integer",
              "description": "User ID",
              "example": 4
            },
            "tentId": {
              "type": "string",
              "description": "Tent ID",
              "example": "11"
            },
            "tentName": {
              "type": "string",
              "description": "Tent name",
              "example": "KX1CJ"
            },
            "slotId": {
              "type": "string",
              "nullable": true,
              "description": "Slot ID",
              "example": null
            },
            "bookingDate": {
              "type": "string",
              "nullable": true,
              "description": "Booking date",
              "example": null
            },
            "numberOfPeople": {
              "type": "integer",
              "description": "Number of people",
              "example": 5
            },
            "startTime": {
              "type": "string",
              "format": "time",
              "description": "Start time",
              "example": "00:00"
            },
            "endTime": {
              "type": "string",
              "format": "time",
              "description": "End time",
              "example": "00:00"
            },
            "comments": {
              "type": "string",
              "description": "Additional comments",
              "example": ""
            },
            "status": {
              "type": "string",
              "description": "Booking status",
              "example": "pending_payment"
            },
            "url": {
              "type": "string",
              "description": "Payment URL for completing the payment",
              "example": "https://kpaytest.com.kw/kpg/PaymentHTTP.htm?param=paymentInit&trandata=..."
            },
            "invoice": {
              "type": "object",
              "properties": {
                "invoiceId": {
                  "type": "string",
                  "description": "Invoice ID",
                  "example": "8"
                },
                "amount": {
                  "type": "string",
                  "description": "Booking amount in KWD",
                  "example": "12.000"
                },
                "description": {
                  "type": "string",
                  "description": "Invoice description",
                  "example": ""
                },
                "status": {
                  "type": "string",
                  "description": "Invoice payment status",
                  "example": "pending"
                },
                "expiryDate": {
                  "type": "string",
                  "nullable": true,
                  "description": "Invoice expiry date",
                  "example": null
                }
              }
            }
          }
        }
      }
    },
    "TentReservationDetailsResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "reservation": {
          "$ref": "#/components/schemas/TentReservationDetail"
        }
      }
    },
    "TentReservationsListResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "pagination": {
          "type": "object",
          "properties": {
            "currentPage": {
              "type": "integer",
              "example": 1
            },
            "totalPages": {
              "type": "integer",
              "example": 1
            },
            "totalItems": {
              "type": "integer",
              "example": 3
            },
            "itemsPerPage": {
              "type": "integer",
              "example": 10
            }
          }
        },
        "reservations": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/TentReservationDetail"
          }
        }
      }
    },
    "TentReservationDetail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 6
        },
        "member_id": {
          "type": "integer",
          "example": 4
        },
        "tent_id": {
          "type": "integer",
          "description": "Tent ID",
          "example": 11
        },
        "admin_id": {
          "type": "integer",
          "nullable": true,
          "description": "Admin ID who processed the reservation",
          "example": null
        },
        "tent_type_id": {
          "type": "integer",
          "description": "Tent type ID",
          "example": 2
        },
        "tent_availability_id": {
          "type": "integer",
          "description": "Tent availability slot ID",
          "example": 39
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "Reservation date",
          "example": "2025-08-12T00:00:00.000000Z"
        },
        "price": {
          "type": "string",
          "description": "Reservation price in KWD",
          "example": "12.000"
        },
        "guests": {
          "type": "integer",
          "nullable": true,
          "description": "Number of guests",
          "example": null
        },
        "status": {
          "type": "string",
          "enum": ["pending", "paid", "finished", "cancelled"],
          "example": "pending",
          "description": "pending: في انتظار الدفع, paid: مدفوع, finished: منتهي, cancelled: ملغية"
        },
        "uuid": {
          "type": "string",
          "example": "0bc3d1e7-4dd0-47c8-a69c-4b5bb7956509"
        },
        "tap_id": {
          "type": "string",
          "nullable": true,
          "description": "TAP payment gateway ID",
          "example": null
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "example": "2025-08-11T09:52:07.000000Z"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "example": "2025-08-11T09:52:07.000000Z"
        },
        "qrcode": {
          "type": "string",
          "description": "QR code URL for the reservation",
          "example": "https://api256413.policeclubkw.com/api/member/qrcode/tent_reservation/6"
        }
      },
      "required": ["id", "member_id", "tent_id", "admin_id", "tent_type_id", "tent_availability_id", "date", "price", "guests", "status", "uuid", "tap_id", "created_at", "updated_at", "qrcode"]
    }
    }
  }
}